{"version":3,"file":"static/webpack/static/development/pages/index.js.9b30c0afbebe4d873a7b.hot-update.js","sources":["webpack:///./components/IconGrid.js"],"sourcesContent":["// import copyToClipboard from \"./helpers/copyToClipboard\"\nimport React from 'react';\n\n// safari doesn't support navigator.clipboard\n// see: https://josephkhan.me/javascript-copy-clipboard-safari/\nfunction copyToClipboard(textToCopy) {\n  var textArea;\n\n  function isOS() {\n    //can use a better detection logic here\n    return navigator.userAgent.match(/ipad|iphone/i);\n  }\n\n  function createTextArea(text) {\n    textArea = document.createElement('textArea');\n    textArea.readOnly = true;\n    textArea.contentEditable = true;\n    textArea.value = text;\n    document.body.appendChild(textArea);\n  }\n\n  function selectText() {\n    var range, selection;\n\n    if (isOS()) {\n      range = document.createRange();\n      range.selectNodeContents(textArea);\n      selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      textArea.setSelectionRange(0, 999999);\n    } else {\n      textArea.select();\n    }\n  }\n\n  function copyTo() {\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n  }\n\n  createTextArea(textToCopy);\n  selectText();\n  copyTo();\n}\n\nconst IconCard = ({ Icon, name }) => {\n  const ref = React.useRef();\n\n  const [text, setText] = React.useState(name);\n\n  const handleClick = async e => {\n    const { innerHTML } = ref.current;\n    if (!navigator.clipboard) {\n      copyToClipboard(outerHTML);\n      setText('copied!');\n      setTimeout(() => {\n        setText(name);\n      }, 1e3);\n    } else {\n      try {\n        await navigator.clipboard.writeText(innerHTML);\n      } catch (error) {\n        console.error(error);\n        return;\n      }\n    }\n    setText('copied!');\n    setTimeout(() => {\n      setText(name);\n    }, 1e3);\n  };\n\n  return (\n    <div className=\"pb-1/1 relative\">\n      <div className=\"absolute inset-0\">\n        <button\n          className=\"flex flex-row justify-center items-center w-full h-full text-white hover:text-gray-100 bg-green-900 hover:bg-ez-green rounded-lg focus:outline-none shadow focus:shadow-outline\"\n          onPointerDown={e => e.preventDefault()}\n          title={text}\n          onClick={handleClick}\n        >\n          <div ref={ref}>\n            <Icon className=\"w-8 h-8 fill-current text-white\" />\n          </div>\n          <div className=\"m-3 absolute inset-x-0 bottom-0\">\n            <p className=\"text-center font-semibold text-sm leading-snug truncate\">{text}</p>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst IconGrid = React.memo(({ icons }) => (\n  <div\n    style={{\n      minHeight: 'calc(100vh - 6rem - 5.5rem - 1.5rem)'\n    }}\n  >\n    <div className=\"grid grid-cols-3 xs:grid-cols-4 sm:grid-cols-5 md:grid-cols-5 lg:grid-cols-6 gap-3\">\n      {icons.map(icon => (\n        <IconCard key={icon.name} name={icon.name} Icon={icon} />\n      ))}\n    </div>\n  </div>\n));\n\nexport default IconGrid;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AAZA;AACA;AADA;AAgBA;AACA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AAcA;;;;A","sourceRoot":""}